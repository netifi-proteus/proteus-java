buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
    
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.8.1"
    }
}

plugins {
    id 'com.gradle.build-scan' version '2.0.2' // declare before any other plugin
    id 'com.google.osdetector' version '1.4.0'
    id "com.github.hierynomus.license" version '0.15.0'
    id 'com.github.sherter.google-java-format' version '0.8' apply false
    id 'me.champeau.gradle.jmh' version '0.4.7' apply false
    id 'io.morethan.jmhreport' version '0.6.2.1' apply false
    id 'io.spring.dependency-management' version '1.0.7.RELEASE' apply false
    id 'com.google.protobuf' version '0.8.8' apply false
}

//buildScan { licenseAgreementUrl = 'https://gradle.com/terms-of-service'; licenseAgree = 'yes' }
buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}


allprojects {

    dependencyLocking {
        lockAllConfigurations()
    }

}

subprojects {
    apply from: "../dependency-management.gradle"
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'com.github.sherter.google-java-format'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'license'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    project.version += project.hasProperty('versionSuffix') ? project.property('versionSuffix') : ''

    repositories {
        jcenter()
        maven {
            url = 'https://artifactory.netifiinc.com/artifactory/libs-snapshot-local'
            credentials {
                username = project.findProperty('netifiArtifactoryUsername') ?: System.getenv('NETIFI_ARTIFACTORY_USERNAME')
                password = project.findProperty('netifiArtifactoryPassword') ?: System.getenv('NETIFI_ARTIFACTORY_PASSWORD')
            }
        }
        maven { url 'http://repo.spring.io/libs-snapshot' }
        maven { url 'https://oss.jfrog.org/oss-snapshot-local' }
        maven { url 'https://oss.jfrog.org/oss-release-local' }
        mavenCentral()

    }

    googleJavaFormat {
        toolVersion = '1.6'
        exclude '**/generated'
    }

    // Build Source Jars
    def sourcesJarMap = [name: 'sourcesJar', type: Jar, dependsOn: classes]
    project.tasks.create(sourcesJarMap, {
        classifier = 'sources'
        from sourceSets.main.allSource
        version = "${project.version}"
    })

    // Build Javadoc Jars
    def javadocJarMap = [name: 'javadocJar', type: Jar, dependsOn: javadoc]
    project.tasks.create(javadocJarMap, {
        classifier = 'javadoc'
        from javadoc.destinationDir
        version = "${project.version}"
    })

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
    
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    license {
        header rootProject.file('resources/HEADER')
        strictCheck true
        excludes(["**/*.xml", "**/*.json"])
    }
    license.mapping('java', 'SLASHSTAR_STYLE')
}

apply from: "artifactory.gradle"
apply from: "bintray.gradle"