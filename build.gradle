buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

plugins {
    id 'com.gradle.build-scan' version '1.9' // declare before any other plugin

    id 'com.google.osdetector' version '1.4.0'
    id 'com.github.sherter.google-java-format' version '0.6'
    id 'com.github.johnrengelman.shadow' version '2.0.1' apply false
    id 'me.champeau.gradle.jmh' version '0.4.4' apply false
    id 'io.morethan.jmhreport' version '0.6.2.1' apply false
}

buildScan { licenseAgreementUrl = 'https://gradle.com/terms-of-service'; licenseAgree = 'yes' }

project(':admin-client') {
    description = 'Netifi Proteus Admin Client'
    ext.artifactName = 'admin-client'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':auth') {
    description = 'Netifi Proteus Authentication Utilities'
    ext.artifactName = 'auth'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':client') {

    description = 'Netifi Proteus Client'
    ext.artifactName = 'client'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':core') {
    description = 'Netifi Core Library'
    ext.artifactName = 'core'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':frames') {

    description = 'Netifi Proteus Frames'
    ext.artifactName = 'frames'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':metrics') {

    description = 'Netifi Proteus Metrics'
    ext.artifactName = 'metrics'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':metrics-idl') {

    description = 'Netifi Proteus Metrics IDL'
    ext.artifactName = 'metrics-idl'

    apply from: file('../gradle/release.gradle')
    apply from: file('../gradle/java.gradle')
}

project(':protobuf-rpc') {
    description = 'Netifi Proteus RPC'
    ext.artifactName = 'protobuf-rpc'

    apply from: file('../gradle/release.gradle')
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    repositories {
        jcenter()
        maven { url 'https://dl.bintray.com/netifi/netifi-oss/' }
        mavenLocal()
    }

    dependencies {

        testCompile "junit:junit:4.12"

        testCompile 'io.projectreactor:reactor-test:3.1.3.RELEASE'
        testCompile 'com.google.protobuf:protobuf-java:3.5.0'
        testCompile 'org.hdrhistogram:HdrHistogram:2.1.10'
        testCompile 'org.apache.logging.log4j:log4j-api:2.8.2'
        testCompile 'org.apache.logging.log4j:log4j-core:2.8.2'
        testCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
        testCompile 'io.rsocket:rsocket-transport-netty:0.10.3'
        testCompile 'io.rsocket:rsocket-transport-local:0.10.3'
        testCompile 'org.mockito:mockito-all:1.10.19'
    }
}
