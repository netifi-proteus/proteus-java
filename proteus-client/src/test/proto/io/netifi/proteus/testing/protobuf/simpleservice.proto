syntax = "proto3";

package io.netifi.proteus.testing.protobuf;

import "google/protobuf/empty.proto";
import "rsocket/options.proto";

option java_package = "io.netifi.proteus.testing.protobuf";
option java_outer_classname = "SimpleServiceProto";
option java_multiple_files = true;

// A simple service for test.
service SimpleService {
  // fire and forget
  rpc FireAndForget (SimpleRequest) returns (google.protobuf.Empty) {
    option (io.rsocket.rpc.options) = {
      fire_and_forget: true
    };
  }

  // Streams when you send a Fire and Forget
  rpc StreamOnFireAndForget (google.protobuf.Empty) returns (stream SimpleResponse) {}

  // Simple unary RPC.
  rpc UnaryRpc (SimpleRequest) returns (SimpleResponse) {}

  // Simple client-to-server streaming RPC.
  rpc ClientStreamingRpc (stream SimpleRequest) returns (SimpleResponse) {}

  // Simple server-to-client streaming RPC.
  rpc ServerStreamingRpc (SimpleRequest) returns (stream SimpleResponse) {}

  // Simple server-to-client streaming RPC.
  rpc ServerStreamingFireHose (SimpleRequest) returns (stream SimpleResponse) {}

  // Simple bidirectional streaming RPC.
  rpc BidiStreamingRpc (stream SimpleRequest) returns (stream SimpleResponse) {}
}

// A simple request message type for test.
message SimpleRequest {
  // An optional string message for test.
  string requestMessage = 1;
}

// A simple response message type for test.
message SimpleResponse {
  // An optional string message for test.
  string responseMessage = 1;
}
