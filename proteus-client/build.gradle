apply plugin: 'com.google.protobuf'

description = 'Netifi Proteus Client'

dependencies {
    protobuf project (':proteus-broker-info-idl')

    compile project (':proteus-auth')
    compile project (':proteus-frames')
    compile 'com.typesafe:config'
    compile 'com.google.guava:guava'
    compile 'io.rsocket.rpc:rsocket-rpc-core'
    compile "io.netty:netty-tcnative:2.0.18.Final:linux-x86_64"

    testProtobuf 'io.rsocket.rpc:rsocket-rpc-protobuf-idl'
    testCompile project(':proteus-tracing-openzipkin')
    testCompile project(':proteus-metrics-micrometer')
    testCompile 'io.micrometer:micrometer-registry-atlas'
    testCompile 'javax.inject:javax.inject'
    testCompile 'junit:junit'
    testCompile 'org.apache.logging.log4j:log4j-api'
    testCompile 'org.apache.logging.log4j:log4j-core'
    testCompile 'org.apache.logging.log4j:log4j-slf4j-impl'
}

protobuf {
    generatedFilesBaseDir = "${projectDir}/src/generated"

    protoc {
        artifact = "com.google.protobuf:protoc"
    }
    plugins {
        rsocketRpc {
            artifact = "io.rsocket.rpc:rsocket-rpc-protobuf"
        }
    }
    generateProtoTasks {
        all().each { task ->
            // Recompile protos when build.gradle has been changed, because
            // it's possible the version of protoc has been changed.
            task.inputs.file "${rootProject.projectDir}/build.gradle"
            task.plugins {
                rsocketRpc {}
            }
        }
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}

idea {
    module {
        sourceDirs += file("src/main/proto")
        sourceDirs += file("src/generated/main/java")
        sourceDirs += file("src/generated/main/proteus")

        generatedSourceDirs += file('src/generated/main/java')
        generatedSourceDirs += file('src/generated/main/proteus')
    }
}
